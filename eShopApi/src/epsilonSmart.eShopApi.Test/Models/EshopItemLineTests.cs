/* 
 * EpsilonSmart Eshop API
 *
 * This is the EspilonSmart API descriptor. The particular definition of the API provides API endpoints related to e-shop operations. </br>  All the following actions require Authorization token. Http request should contain a header having key: 'Authorization' and value: 'Bearer {Jwt Token value}'.   If the request lacks Authorization header or the token is invalid, each action responds with status 401 Unauthorized.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using epsilonSmart.eShopApi.Api;
using epsilonSmart.eShopApi.Models;
using epsilonSmart.eShopApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace epsilonSmart.eShopApi.Test
{
    /// <summary>
    ///  Class for testing EshopItemLine
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class EshopItemLineTests
    {
        // TODO uncomment below to declare an instance variable for EshopItemLine
        //private EshopItemLine instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of EshopItemLine
            //instance = new EshopItemLine();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EshopItemLine
        /// </summary>
        [Test]
        public void EshopItemLineInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" EshopItemLine
            //Assert.IsInstanceOfType<EshopItemLine> (instance, "variable 'instance' is a EshopItemLine");
        }


        /// <summary>
        /// Test the property 'ItemID'
        /// </summary>
        [Test]
        public void ItemIDTest()
        {
            // TODO unit test for the property 'ItemID'
        }
        /// <summary>
        /// Test the property 'ItemCode'
        /// </summary>
        [Test]
        public void ItemCodeTest()
        {
            // TODO unit test for the property 'ItemCode'
        }
        /// <summary>
        /// Test the property 'ScanCode'
        /// </summary>
        [Test]
        public void ScanCodeTest()
        {
            // TODO unit test for the property 'ScanCode'
        }
        /// <summary>
        /// Test the property 'ItemPrintDescr'
        /// </summary>
        [Test]
        public void ItemPrintDescrTest()
        {
            // TODO unit test for the property 'ItemPrintDescr'
        }
        /// <summary>
        /// Test the property 'VATPercent'
        /// </summary>
        [Test]
        public void VATPercentTest()
        {
            // TODO unit test for the property 'VATPercent'
        }
        /// <summary>
        /// Test the property 'Qty'
        /// </summary>
        [Test]
        public void QtyTest()
        {
            // TODO unit test for the property 'Qty'
        }
        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Test]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }
        /// <summary>
        /// Test the property 'IsGift'
        /// </summary>
        [Test]
        public void IsGiftTest()
        {
            // TODO unit test for the property 'IsGift'
        }
        /// <summary>
        /// Test the property 'LineDiscount'
        /// </summary>
        [Test]
        public void LineDiscountTest()
        {
            // TODO unit test for the property 'LineDiscount'
        }
        /// <summary>
        /// Test the property 'NetVal'
        /// </summary>
        [Test]
        public void NetValTest()
        {
            // TODO unit test for the property 'NetVal'
        }
        /// <summary>
        /// Test the property 'VATVal'
        /// </summary>
        [Test]
        public void VATValTest()
        {
            // TODO unit test for the property 'VATVal'
        }
        /// <summary>
        /// Test the property 'TotalVal'
        /// </summary>
        [Test]
        public void TotalValTest()
        {
            // TODO unit test for the property 'TotalVal'
        }
        /// <summary>
        /// Test the property 'Justification'
        /// </summary>
        [Test]
        public void JustificationTest()
        {
            // TODO unit test for the property 'Justification'
        }

    }

}
